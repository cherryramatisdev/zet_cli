#!/usr/bin/env perl
use strict;
use warnings;
use autodie;

use v5.14;

# Check for required commands
foreach my $cmd (qw(gh gum goreleaser)) {
    unless (command_exists($cmd)) {
        my $install_msg = {
            gh => "Install 'gh' at: https://cli.github.com",
            gum => "Install 'gum' with: go install github.com/charmbracelet/gum\@latest",
            goreleaser => "Install 'goreleaser' with: go install github.com/goreleaser/goreleaser/v2\@latest"
        }->{$cmd};
        
        die "$install_msg\n";
    }
}

# List the tags first
system("git tag");

my $status = `git status`;
chomp $status;

if ($status =~ /Changes not staged for commit/) {
    die "First commit your changes";
}

# Get tag and message
my $tag = `gum input --placeholder "Which tag do you want? "`;
chomp $tag;
my $tag_message = `gum write --placeholder "Details of the tag "`;
chomp $tag_message;

if ($tag eq "" or $tag_message eq "") {
    die "No tag information was provided";
}

say "Creating the tag...";
system("git", "tag", "-a", $tag, "-m", "\"$tag_message\"");
system("git", "push", "origin", $tag);

say "All right, deploying the binaries";
my $token = `gh auth token`;
chomp $token;
my $openssl = `brew --prefix openssl\@3.0`;
chomp $openssl;
system("GITHUB_TOKEN=$token OPENSSL_DIR=$openssl OPENSSL_INCLUDE_DIR=$openssl/include OPENSSL_LIB_DIR=$openssl/lib goreleaser release --clean");

sub command_exists {
    my $cmd = shift;
    system("command -v $cmd >/dev/null 2>&1");
    return $? == 0;
}
